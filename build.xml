<project name="q" default="jar" basedir=".">
  <property name="src" location="src/main/java" />
  <property name="build" location="build" />
  <property name="dist" location="dist" />
  <property name="q.jar" location="${dist}/q.jar" />
  <property name="lib" location="lib" />
  <property name="test.src" location="src/test/java" />
  <property name="test.lib" location="test/lib" />
  <property name="test.build" location="test/build" />
  <property name="test.reports" location="test/reports" />
  <property name="demo.src" location="demo/src/main/java" />
  <property name="demo.resources" location="demo/src/main/resources" />
  <property name="demo.build" location="demo/build" />
  <property name="demo.dist" location="demo/dist" />
  <property name="demo.jar" location="${demo.dist}/demo.jar" />
  <property name="demo.lib" location="demo/lib" />
  <property name="rhino.jar" location="${lib}/js.jar" />
  <property name="guava.jar" location="${lib}/guava-19.0.jar" />
  <property name="frizzle.jar" location="${lib}/frizzle.jar" />
  <property name="testng.jar" location="${test.lib}/testng-6.9.10.jar" />
  <property name="bsh.jar" location="${demo.lib}/bsh-2.0b4.jar" />
  <property name="frizzle.dir" location="frizzle" />

  <path id="classpath">
    <pathelement location="${rhino.jar}" />
    <pathelement location="${guava.jar}" />
    <pathelement location="${frizzle.jar}" />
  </path>

  <path id="test.classpath">
    <pathelement location="${rhino.jar}" />
    <pathelement location="${guava.jar}" />
    <pathelement location="${frizzle.jar}" />
    <pathelement location="${q.jar}" />
    <pathelement location="${testng.jar}" />
    <pathelement location="${test.build}"/>
  </path>

  <path id="demo.classpath">
    <pathelement location="${rhino.jar}" />
    <pathelement location="${guava.jar}" />
    <pathelement location="${frizzle.jar}" />
    <pathelement location="${bsh.jar}" />
    <pathelement location="${q.jar}" />
  </path>

  <target name="clean" description="clean up">
    <delete dir="${build}" />
    <delete dir="${test.build}" />
    <delete file="${q.jar}" />
    <delete dir="${dist}" />
    <delete dir="${demo.build}" />
    <delete file="${demo.jar}" />
    <delete dir="${demo.dist}" />
  </target>

  <target name="init">
    <mkdir dir="${build}" />
    <mkdir dir="${dist}" />

    <fail message="Missing ${rhino.jar}, please download it: https://developer.mozilla.org/en-US/docs/Rhino/Download_Rhino">
      <condition>
        <not><available file="${rhino.jar}" /></not>
      </condition>
    </fail>

    <fail message="Missing ${guava.jar}, please download it: http://code.google.com/p/guava-libraries/">
      <condition>
        <not><available file="${guava.jar}" /></not>
      </condition>
    </fail>

    <fail message="Missing ${frizzle.jar}, please build it: ant compile-frizzle">
      <condition>
        <not><available file="${frizzle.jar}" /></not>
      </condition>
    </fail>
  </target>

  <target name="compile" depends="init">
    <javac srcdir="${src}" destdir="${build}"
           includeantruntime="true"
           classpathref="classpath" debug="true" />
  </target>

  <target name="jar" depends="compile">
    <jar jarfile="${q.jar}" basedir="${build}" />
  </target>

  <target name="init-test" depends="init">
    <mkdir dir="${test.build}" />

    <fail message="Missing ${testng.jar}, please download it: http://testng.org/doc/download.html">
      <condition>
        <not><available file="${testng.jar}" /></not>
      </condition>
    </fail>
  </target>

  <target name="compile-test" depends="init-test, jar">
    <javac srcdir="${test.src}" destdir="${test.build}" classpathref="test.classpath" debug="true" />
  </target>

  <target name="test" depends="compile-test">
    <taskdef resource="testngtasks" classpath="${testng.jar}"/>
    <delete dir="${test.reports}" />

    <testng classpathref="test.classpath" outputDir="${test.reports}" haltOnFailure="true" verbose="2">
      <classfileset dir="${test.build}" includes="**/*Test.class" />
    </testng>
  </target>

  <target name="init-demo" depends="init">
    <mkdir dir="${demo.build}" />
    <mkdir dir="${demo.dist}" />

    <fail message="Missing ${bsh.jar}, please download it: http://www.beanshell.org/download.html">
      <condition>
        <not><available file="${bsh.jar}" /></not>
      </condition>
    </fail>
  </target>

  <target name="init-frizzle">
    <exec dir="${basedir}" executable="git">
      <arg line="submodule init" />
    </exec>

    <exec dir="${basedir}" executable="git">
      <arg line="submodule update" />
    </exec>

    <exec dir="${frizzle.dir}" executable="git">
      <arg line="submodule init" />
    </exec>

    <exec dir="${frizzle.dir}" executable="git">
      <arg line="submodule update" />
    </exec>
  </target>

  <target name="clean-frizzle" depends="init-frizzle">
    <ant dir="${frizzle.dir}" inheritAll="false" useNativeBasedir="true">
      <target name="clean" />
      <property name="rhino.jar" value="${rhino.jar}" />
      <property name="guava.jar" value="${guava.jar}" />
      <property name="frizzle.jar" value="${frizzle.jar}" />
    </ant>
  </target>

  <target name="compile-frizzle" depends="init-frizzle">
    <ant dir="${frizzle.dir}" inheritAll="false" useNativeBasedir="true">
      <target name="jar" />
      <property name="rhino.jar" value="${rhino.jar}" />
      <property name="guava.jar" value="${guava.jar}" />
      <property name="frizzle.jar" value="${frizzle.jar}" />
    </ant>
  </target>

  <target name="compile-demo" depends="init-demo, jar">
    <javac srcdir="${demo.src}" destdir="${demo.build}" classpathref="demo.classpath" debug="true" />
  </target>

  <target name="jar-demo" depends="compile-demo">
    <copy todir="${demo.build}">
      <fileset dir="${demo.resources}" includes="**/*" />
    </copy>

    <jar jarfile="${demo.jar}">
      <fileset dir="${demo.build}"/>
      <zipfileset src="${rhino.jar}" />
      <zipfileset src="${guava.jar}" />
      <zipfileset src="${frizzle.jar}" />
      <zipfileset src="${bsh.jar}" />
      <zipfileset src="${q.jar}" />

      <manifest>
        <attribute name="Main-Class" value="Demo" />
      </manifest>
    </jar>
  </target>
</project>
